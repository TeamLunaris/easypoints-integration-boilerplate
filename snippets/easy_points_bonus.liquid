{%- liquid
  assign bonus_points_active = false
  assign final_currency_value = 0
  assign final_point_value = 0
  assign final_point_ratio = 0

  assign tax_rate = 1.1

  assign multiplier = 1
  assign currencies = 'JPY,KRW,BIF,CLP,DJF,GNF,ISK,KMF,PYG,RWF,UGX,VND,VUV,XAF,XOF,XPF'
  assign currencies = currencies | split: ','
  if currencies contains shop.currency
    assign multiplier = 100
  endif
  for collection in product.collections
    assign metafield_bonus_points = collection.metafields.loyalty.bonus_points

    if metafield_bonus_points.active
      assign bonus_points_active = true
    endif

    if metafield_bonus_points and metafield_bonus_points.active
      assign point_value = metafield_bonus_points.point_value | times: 1.0
      assign currency_value = metafield_bonus_points.currency_value | times: 1.0

      if point_value >= final_point_value
        assign final_point_value = point_value
      endif
    endif

    if collection.metafields.loyalty.tax_override_percentage
      assign tax_override_percentage = collection.metafields.loyalty.tax_override_percentage | divided_by: 100
      assign tax_rate = 1 | plus: tax_override_percentage
    endif
  endfor

  assign shop_metafield = shop.metafields.loyalty.easy_points_attributes.value
  if customer
    assign customer_metafield = customer.metafields.loyalty.easy_points_attributes.value
  endif

  assign currency_value = shop_metafield.currency_value | times: 1.0
  assign point_value = shop_metafield.point_value

  if customer_metafield
    assign currency_value = shop_metafield.point_rules[customer_metafield.tier_uid].currency_value | times: 1.0
    assign point_value = shop_metafield.point_rules[customer_metafield.tier_uid].point_value
  endif

  capture currency_cost
    render 'easy_points_currency_cost', price: price, tax_rate: tax_rate
  endcapture

  assign currency_cost = currency_cost | strip_html
  assign bonus_points = currency_cost | divided_by: multiplier | divided_by: currency_value | times: final_point_value | floor 
-%}

{%- if bonus_points_active -%}
  {%- raw -%}
    data-loyal-bonus-points="{
      &quot;productId&quot;: {%- endraw -%}{{ product.id }}{%- raw -%},
      &quot;pointValue&quot;: {%- endraw -%}{{ final_point_value | divided_by: 100000 }}{%- raw -%},
      &quot;currencyValue&quot;: {%- endraw -%}{{ final_currency_value }}{%- raw -%},
      &quot;quantity&quot;: {%- endraw -%}{{ quantity | default: 1 }}{%- raw -%},
      &quot;bonusPoints&quot;: {%- endraw -%}{{ bonus_points }}{%- raw -%}
    }"
  {%- endraw -%}
{%- endif -%}
